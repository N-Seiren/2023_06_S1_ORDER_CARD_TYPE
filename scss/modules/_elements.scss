@use '../abstract/' as *;

$DROP: '.dropdown';
$PAGE: '.page';

%gapDefault {
	&.gap {
		&-10 {
			gap: 10px;
		}
		&-18 {
			gap: 18px;
		}
		&-20 {
			gap: 20px;
		}
	}
}

// ICON
.ico {
	@each $SIZE in $ICON-SIZE-ALL {
		&-#{$SIZE} {
			@extend %resetIcon;
			display: inline-block;
			width: #{$SIZE}px;
			height: #{$SIZE}px;
			flex-shrink: 0;
		}
	}
}
@each $TYPE, $COLOR-LIST in $IMAGE-SET-ALL {
	@each $COLOR, $URL-LIST in $COLOR-LIST {
		@each $NAME, $VALUE in $URL-LIST {
			@if $COLOR == 'png' {
				.#{$TYPE}-#{$NAME}-#{$COLOR} {
					background-image: url('../images/' + $TYPE + '/' + $NAME + '.' + $VALUE);
				}
			} @else if $COLOR != '' {
				.#{$TYPE}-#{$NAME}-#{$COLOR} {
					background-image: url('../images/' + $TYPE + '/' + $NAME + '-' + $COLOR + '.' + $VALUE);
				}
			} @else {
				.#{$TYPE}-#{$NAME} {
					background-image: url('../images/' + $TYPE + '/' + $NAME + '.' + $VALUE);
				}
			}
		}
	}
}

// BUTTON
.btn {
	@include set-flex($INLINE: true, $JUSTIFY: center, $ALIGN: center);
	min-width: 75px;
	min-height: 34px;
	padding: 7.5px 13px;
	border: {
		width: 1px;
		style: solid;
		radius: 4px;
	}
	background-color: transparent;
	font-size: 14px;
	font-weight: $F-SB;
	line-height: 17px;
	outline: none;

	&.is {
		// Color
		&--blue {
			background-color: $C-PN;
			border-color: $C-PN;
			color: $C-W;
			&:active {
				background-color: $C-PD;
				border-color: $C-PD;
			}
			&:disabled {
				color: $C-FID;
				background-color: $C-BD;
				border-color: $C-BN;
			}

			&.line {
				background-color: $C-W;
				color: $C-PN;
			}
		}
		&--red {
			background-color: $C-SN;
			border-color: $C-SN;
			color: $C-W;
			&:active {
				background-color: $C-SD;
				border-color: $C-SD;
			}
			&:disabled {
				color: $C-FID;
				background-color: $C-BD;
				border-color: $C-BN;
			}
			&.has--ico {
			}

			&.line {
				background-color: $C-W;
				color: $C-SN;
			}
		}
		&--white {
			background-color: $C-W;
			border: 1px solid $C-BN;
			color: $C-FI;
			&:active {
				background-color: $C-BN;
				border-color: $C-BS;
			}
			&:disabled {
				color: $C-FID;
				background-color: $C-BD;
			}
			&.has--ico {
			}
		}

		// Type
		&--large {
			min-height: 44px;
			font-size: 18px;
			line-height: 21px;
		}
		&--search {
			@include set-flex($FIXED: true);
			width: 80px;
			height: 54px;
			font-weight: 500;
			font-size: 18px;

			[class*='ico-'] {
				$S: 22px;
				width: $S;
				height: $S;
				margin-right: 2px;
			}

			&.is--white {
				color: $C-FI;
			}
		}
		&--state {
			height: 60px;
			padding-right: 0;
			padding-left: 0;
			background-color: $C-W;
			font-size: 14px;
			line-height: 18px;
			font-weight: 600;

			&.is--blue {
				&,
				&:active {
					background-color: $C-W;
					border: 1px solid $C-PN;
					color: $C-PN;
				}
			}
			&.is--white {
				&,
				&:active {
					background-color: $C-W;
					border: 1px solid $C-BN;
					color: $C-FI;
				}
			}
			&.active {
				&,
				&:active {
					background-color: $C-PN;
					color: $C-W;
				}
			}

			&.disabled,
			&.disabled:active,
			&:disabled,
			&:disabled:active {
				background-color: $C-BD;
				border-color: $C-BN;
				color: $C-FID;
				font-weight: $F-SB;
			}
		}
		&--text {
			@include set-flex($ALIGN: center);
			display: inline-flex;
			min-width: 0;
			padding: 0;
			border: 0;
			border-radius: 0;
			font-size: 14px;
			line-height: 20px;
		}
		&--file {
			padding: 7px 8px;
			padding-right: 13px;

			&.has--ico {
				padding: 5px;
				padding-right: 13px;
				[class*='ico-'] {
					margin-left: 0;
					margin-right: 7px;
				}
			}
		}

		// Width
		&--px25 {
			@include space(false, 25px, x);
		}
		&--w120 {
			width: 120px;
		}
		&--w160 {
			width: 160px;
		}
		&--w220 {
			width: 220px;
		}
		&--w328 {
			width: 328px;
		}
		&--full {
			width: 100%;
		}
	}

	&.has--ico {
		[class*='ico-'] {
			margin-left: -8px;
		}
	}
}

// INPUT
.input {
	$EL: '.input';
	$H-L: 50px;

	&-text {
		$PW: '.pw';
		$G: 7px;
		$S: 24px;
		$P: 7px;

		@include set-flex($DIRECTION: column);
		gap: 7px;

		input {
			display: block;
			width: 100%;
			padding: 8px 10px;
			border: 1px solid $C-BN;
			border-radius: 2px;
			color: $C-FI;
			font-size: 14px;
			line-height: 17px;
			font-weight: 400;
			outline: none;
			&::placeholder {
				color: $C-FP;
			}
			&::-moz-placeholder {
				color: $C-FP;
			}
			&::-webkit-input-placeholder {
				color: $C-FP;
			}

			&:focus:not(:disabled) {
				border-color: $C-PN;
			}

			&:disabled {
				background-color: $C-BD;
				border-color: $C-BN;
				color: $C-FID;
			}
		}

		.box {
			position: relative;
			width: 100%;
			height: 100%;

			// BUTTON
			&.has {
				&--button {
					@include set-flex($ALIGN: center);
					gap: $P;
					input {
						position: relative;
						width: 100%;
						z-index: 5;
					}

					&.single {
						input {
							padding-right: $S + $P + 16;
						}
					}
					&.double {
						input {
							padding-right: (($S + $P) * 2) + 16;
						}
					}
				}
				&--timer {
					position: relative;
					.box {
						input {
							padding-right: 70px;
						}
					}
					.find-time {
						position: absolute;
						top: 50%;
						right: $P * 2 + 2;
						color: $C-PN;
						font-size: 16px;
						line-height: 19px;
						transform: translateY(-50%);
					}
				}
			}

			input {
				height: 100%;
				&:focus:not(:disabled) {
					& + #{$EL}-btn {
						#{$PW}-action {
							&.show {
								background-image: url(urlImg(ico, pw-on, blue));
							}
							&.hide {
								background-image: url(urlImg(
									ico,
									pw-off,
									blue
								));
							}
						}
						#{$PW}-search {
							background-image: url(urlImg(ico, search, blue));
						}
					}
				}

				&:disabled {
					& + #{$EL}-btn {
						#{$PW}-action {
							&.show {
								background-image: url(urlImg(ico, pw-on, gray));
							}
							&.hide {
								background-image: url(urlImg(
									ico,
									pw-off,
									gray
								));
							}
						}
						#{$PW}-search {
							background-image: url(urlImg(ico, search, gray));
						}
					}
					& + .date-button {
						background-image: url(urlImg(ico, calendar, gray));
					}
				}
			}

			// TYPE
			#{$EL}-btn,
			.date-button {
				@include set-flex($ALIGN: center);
				position: absolute;
				gap: $P;
				top: 50%;
				right: 10px;
				transform: translateY(-50%);
				z-index: 10;

				button:not([class*='ico-']),
				a:not([class*='ico-']) {
					@extend %resetIcon;
					width: $S;
					height: $S;
				}

				#{$PW}-action {
					&.show {
						background-image: url(urlImg(ico, pw-on));
					}
					&.hide {
						background-image: url(urlImg(ico, pw-of));
					}
				}
				#{$PW}-remove:not([class*='ico-']) {
					$S: 20px;
					width: $S;
					height: $S;
					background-image: url(urlImg(ico, remove, gray));
					background-size: $S;
				}
				#{$PW}-search:not([class*='ico-']) {
					width: $S + 8;
					height: $S + 8;
					background-image: url(urlImg(ico, search));
					background-size: $S + 8;
				}
			}
		}
		.valid,
		.desc {
			display: none;
			font-size: 15px;
			line-height: 18px;
		}

		.desc {
			display: block;
			color: $C-FM;
		}

		// TYPE
		&.pass,
		&.focus {
			input:not(:disabled) {
				border-color: $C-PN;
			}
		}

		&.err {
			input:not(:disabled) {
				border-color: $C-SN;
			}
		}

		&.disabled {
			input {
				background-color: $C-BD;
				border-color: $C-BN;
				& + #{$PW}.show {
					background-image: url(urlImg(ico, pw-on, gray));
				}
				& + #{$PW}.hide {
					background-image: url(urlImg(ico, pw-off, gray));
				}
			}
		}

		&.pass,
		&.err {
			.valid {
				display: block;
			}
		}

		&.pass {
			.valid {
				color: $C-PN;
			}
		}
		&.err {
			.valid {
				color: $C-SN;
			}

			.box {
				&.date {
					input {
						color: $C-SN;
					}
				}
			}

			.date-button {
				background-image: url(urlImg(ico, calendar, red));
			}
		}

		// SIZE
		&.is {
			&--large {
				$G: 7px;
				$S: 24px;
				$P: 10px;
				.box {
					// BUTTON
					&.has--button {
						&.single {
							input {
								padding-right: $S + $P + 16;
							}
						}
						&.double {
							input {
								padding-right: (($S + $P) * 2) + 16;
							}
						}
					}

					#{$PW}-btn {
						right: 16px;
						gap: $P;
						button,
						a {
							width: $S;
							height: $S;
						}
						#{$PW}-remove {
							width: $S - 4;
							height: $S - 4;
							background-image: url(urlImg(ico, remove, gray));
							background-size: $S - 4;
						}
					}

					input {
						min-height: $H-L;
						padding-right: 16px;
						padding-left: 16px;
						font-size: 18px;
						line-height: 21px;
					}
				}
			}
			&--w160 {
				@include set-flex($FIXED: true);
				width: 160px;
			}
			&--w245 {
				@include set-flex($FIXED: true);
				width: 245px;
			}
			&--wauto {
				@include set-flex($FIXED: false);
			}
		}

		// CALENDAR
		&.date-layer {
			position: relative;
			z-index: 10;

			.box {
				input {
					padding-right: $S + 5;
				}
				.date-button {
					right: 5px;
				}

				&.bg--white {
					input {
						&:disabled {
							background-color: $C-W;
						}
					}
				}
			}
			.datepicker--layer {
				$E: '.datepicker--layer';
				position: fixed;
				width: 360px;
				top: 100%;
				left: 0;
				margin-top: 4px;
				background-color: $C-W;
				border: 1px solid $C-BN;
				z-index: 10;

				@at-root *:hover {
					#{$E} {
						z-index: 50;
					}
				}

				.datepicker {
					padding-right: 0;
					padding-left: 0;
					padding-bottom: 41px;

					&--title {
						padding-right: 20px;
						padding-left: 20px;
					}
				}
			}
		}
	}
	&-checkbox {
		@extend %defaultInput;
		.input-text {
			align-items: center;
		}
	}
	&-toggle {
		position: relative;
		input {
			position: absolute;
			width: 100%;
			height: 100%;
			top: 0;
			left: 0;
			opacity: 0;
			z-index: 10;

			& + .input-text {
				.icon {
					&::after {
						right: auto;
						left: 0;
					}
				}
			}

			&:checked {
				& + .input-text {
					.icon {
						&::after {
							right: 0;
							left: auto;
						}
					}
				}
			}

			&:checked:not(:disabled) {
				& + .input-text {
					.icon {
						background-color: $C-PN;
					}
				}
			}

			&:disabled {
				& + .input-text {
					.icon {
						background-color: $C-BD;
					}
				}
			}
		}
		.input-text {
			@include set-flex();
			position: relative;
			gap: 6px;
			z-index: 5;
			.icon {
				$H: 24px;
				@include set-flex($FIXED: true);
				position: relative;
				width: 50px;
				height: $H;
				background-color: $C-IN;
				border-radius: $H;
				&::after {
					$CIRCLE: 20px;
					position: absolute;
					display: block;
					width: $CIRCLE;
					height: $CIRCLE;
					margin-top: 2px;
					margin-right: 2px;
					margin-left: 2px;
					background-color: $C-W;
					border-radius: $CIRCLE;
					content: '';
				}
			}
			.text {
				color: $C-FI;
				font-weight: 400;
				font-size: 14px;
				line-height: 17px;
			}
		}
	}
	&-radio {
		@extend %defaultInput;
		.input-text {
			align-items: center;
		}
	}

	&-box {
		@include set-flex($JUSTIFY: stretch, $ALIGN: stretch);
		gap: 6px;

		div:not([class*='--fixed']),
		p:not([class*='--fixed']),
		input:not([class*='--fixed']) {
			@include set-flex($FIXED: false);
		}

		&--fixed {
			@include set-flex($FIXED: true);
		}

		&--title {
			@include set-flex($ALIGN: center);
			margin-right: 16px;
			color: $C-FI;
			font-size: 14px;
			font-weight: $F-SB;
			line-height: 20px;
			white-space: nowrap;

			&.disabled {
				color: $C-FID;
			}
		}

		&.is {
			// size
			&--large {
				min-height: $H-L;
				#{$EL}-text .box input,
				.btn {
					height: $H-L;
					font-size: 18px;
					line-height: 21px;
				}
			}
			&--double {
				@include set-grid($TEMPLATE: auto 17px auto);
				gap: 0;
				max-width: 100%;
				.input-desc {
					@include set-flex($JUSTIFY: center, $ALIGN: center);
					color: $C-FIS;
					font-size: 14px;
					font-weight: $F-SB;
					line-height: 20px;
				}
			}
		}

		// disabled
		&.disabled {
			#{$EL}-box--title {
				color: $C-FID;
			}
		}
	}

	&-row {
		@include set-flex($ALIGN: center);
		gap: 6px;
	}
}

// BOX
.box {
	&--white {
		background-color: $C-W;
		border-radius: 4px;
	}

	&--row {
		@extend %gapDefault;
		@include set-flex($DIRECTION: row);
		display: inline-flex;
	}
	&--column {
		@extend %gapDefault;
		@include set-flex($DIRECTION: column);
		display: inline-flex;
	}

	&--grid {
		@extend %gapDefault;
		&.grid {
			&-5 {
				@include set-grid($AUTO: 5);
			}
		}
	}
}

// DROPDOWN
.dropdown {
	&--select {
		$S: 24px;

		position: relative;
		width: 100%;
		height: 34px;
		padding: 7.5px 9px;
		padding-right: $S + 10px;
		border: 1px solid $C-BN;
		border-radius: 2px;
		text-align: left;
		span {
			@include ellipsis();
			display: block;
			color: $C-FI;
			font-size: 14px;
			font-weight: $F-N;
			text-align: left;
			line-height: 17px;
		}

		&::after {
			@extend %resetIcon;
			position: absolute;
			width: $S;
			height: $S;
			top: 50%;
			right: 5px;
			transform: translateY(-50%);
			background-image: url(urlImg(ico, combo-arrow));
			content: '';
		}

		&:disabled {
			background-color: $C-BD;
			&,
			span {
				color: $C-FID;
			}

			&::after {
				background-image: url(urlImg(ico, combo-arrow, gray));
			}
		}
	}
	&--box {
		@include set-flex($DIRECTION: column, $ALIGN: stretch);
		gap: 0;
		position: absolute;
		display: none;
		width: 100%;
		top: 100%;
		left: 0;
		padding-top: 8px;
		padding-bottom: 12px;
		margin-top: 6px;
		background-color: $C-W;
		border: 1px solid $C-BN;
		border-radius: 2px;
		> a,
		> button {
			padding: 7px 9px;
			color: $C-FIS;
			font-size: 14px;
			font-weight: $F-N;
			text-align: left;
			line-height: 17px;
			&:hover {
				background-color: $C-BH;
			}
			&.active {
				color: $C-PN;
			}
		}
	}

	&--area {
		position: relative;

		&.open {
			z-index: 30;
			#{$DROP}--select {
				border-color: $C-PN;
				&::after {
					background-image: url(urlImg(ico, combo-arrow, blue));
				}
			}
			#{$DROP}--box {
				display: flex;
			}
		}

		// type
		&.is {
			&--small {
				#{$DROP}--select {
					$S: 20px;
					$X: 9px;
					$Y: 6px;
					height: 26px;
					padding: $Y $X;
					padding-right: $S + 6px;
					&::after {
						width: $S;
						height: $S;
						right: 3px;
					}
				}
			}
			&--w245 {
				width: 245px;
			}
		}
	}
}

// SEARCH
.search {
	$PB: 30px;
	&--box {
		@include set-flex($DIRECTION: column, $ALIGN: stretch);
		gap: 0;
		border-bottom: 1px solid $C-TLN;

		&.no--line {
			border-bottom: none;
			& + .tab {
				$T: '.tab';
				&--wrap {
					margin-top: 30px;

					#{$T}-button {
						padding-right: 30px;
						padding-left: 30px;
					}

					.search--contents {
						padding-bottom: 20px;
					}
				}
			}
		}
	}
	&--title {
		padding: $PB $PB 0;
		color: $C-B;
		font-size: 22px;
		font-weight: $F-EB;
		line-height: 26px;
	}
	&--contents {
		flex-wrap: nowrap;
		padding: 20px $PB 0;

		.input-text {
			flex-direction: row;
			.text {
				font-size: 16px;
				font-weight: $F-SB;
			}
		}

		&:last-child {
			@include set-flex($JUSTIFY: space-between, $ALIGN: center);
			padding-bottom: $PB;
		}

		&.is--radio {
			@include set-flex();
			gap: 37px;
		}
	}
	&--items {
		@include set-flex($ALIGN: flex-start);
		gap: 40px;
	}
	&--row {
		@include set-grid($TEMPLATE: auto 1fr);
		gap: 10px;
		.input-box {
			&--title {
				min-width: 65px;
				margin-right: 6px;
				justify-content: flex-start;
				&.is {
					&--right {
						justify-content: flex-end;
					}
				}
			}
		}

		.dropdown--area {
			width: 245px;

			&.is--w144 {
				width: 114px;
			}
		}

		> .input-box {
			width: 245px;

			&.is--wauto {
				width: auto;
			}
			.is--w245 {
				width: 245px;
			}
		}

		> .checkbox-box {
			@include set-flex($ALIGN: center);
			min-height: 34px;
			padding-top: 8px;
			padding-bottom: 8px;
			gap: 30px;
			row-gap: 10px;
			flex-wrap: wrap;
		}
	}
	&--button {
		@include set-flex($ALIGN: center);
		gap: 8px;
	}
}

// TAB
.tab {
	&-text {
		@include set-flex($ALIGN: center);
		gap: 0;
		button,
		a {
			width: 160px;
			height: 46px;
			padding-top: 2px;
			border-bottom: 2px solid $C-BN;
			color: $C-FI;
			font-size: 20px;
			font-weight: $F-SB;
			line-height: 24px;

			&.active {
				padding-top: 4px;
				border-bottom: 4px solid $C-PN;
				color: $C-PN;
				font-weight: $F-EB;
			}
		}
	}
	&-button {
		@include set-flex($ALIGN: stretch);
		button,
		a {
			width: 255px;
			height: 56px;
			background-color: $C-W;
			border: 1px solid $C-BN;
			color: $C-B;
			font-size: 18px;
			font-weight: $F-B;
			line-height: 28px;

			&:first-child {
				border-radius: 4px 0 0 4px;
			}
			&:last-child {
				border-radius: 0 4px 4px 0;
			}

			&:hover {
				color: $C-PN;
			}

			&.active {
				background-color: $C-PN;
				border-color: $C-PN;
				color: $C-W;
			}

			& + button,
			& + a {
				margin-left: -1px;
			}
		}
	}
}

// TABLE
.table {
	&--area {
		padding: 30px 30px 0;

		#{$PAGE}--area {
			margin-top: 20px;
		}
	}
	&--top {
		@include set-flex($DIRECTION: column, $ALIGN: stretch);
		gap: 10px;
		margin-bottom: 20px;
	}
	&--box {
		overflow-x: auto;
		> table {
			> thead {
				> tr {
					th {
						vertical-align: middle;
						position: relative;
						padding: 7px 8px;
						background-color: $C-TTB;
						color: $C-FI;
						font-size: 14px;
						font-weight: $F-SB;
						line-height: 20px;
						&:not(:first-child) {
							&::before {
								position: absolute;
								width: 1px;
								height: 15px;
								top: 50%;
								left: 0;
								background-color: $C-TTL;
								transform: translateY(-50%);
								content: '';
							}
						}

						&.line {
							&--full {
								border-left: 1px solid $C-TTL;
								&::before {
									display: none;
								}
							}
							&--none {
								&::before {
									display: none;
								}
							}
						}
					}
					&:first-child {
						> th {
							border-top: 2px solid $C-TTL;
						}
					}
					& + tr {
						> th {
							border-top: 1px solid $C-TTL;
						}
					}
				}
			}
			> tbody {
				> tr {
					> td {
						padding: 8px 12px;
						border-bottom: 1px solid $C-TB;
						color: $C-FI;
						font-size: 14px;
						font-weight: $F-SB;
						line-height: 20px;
						&.is--date {
							padding: 1px 4px 2px;
						}
						&.has--bg {
							background-color: $C-BT;
						}
					}

					&:hover {
						> th,
						> td {
							background-color: $C-TTH;
						}
					}
					&.is--checked {
						> th,
						> td {
							background-color: $C-TTC;
						}
					}
				}
			}

			> thead,
			> tbody {
				> tr {
					> th,
					> td {
						text-align: center;
						&.align-left {
							text-align: left;
						}
						&.px0 {
							padding-right: 0;
							padding-left: 0;
							text-align: center;
							.input-checkbox {
								vertical-align: middle;
								display: inline-block;
								margin-top: -2px;
							}
						}
					}
					&.disabled {
						> th,
						> td {
							background-color: $C-BT;
							color: $C-FID;
						}
					}
				}
			}
		}
	}

	&__title {
		$EL: '.table__title';

		color: $C-B;
		font-size: 18px;
		font-weight: $F-SB;
		line-height: 28px;

		&--left {
		}
		&--right {
		}
		&.has {
			&--button {
				@include set-flex($JUSTIFY: space-between);
				#{$EL}--right {
					@include set-flex($ALIGN: center);
					gap: 8px;
				}
			}
		}
	}
	&__filter {
		@include set-flex($JUSTIFY: space-between);
		min-height: 34px;
		&--left {
			@include set-flex($ALIGN: center);
		}
		&--center {
		}
		&--right {
			@include set-flex($ALIGN: center);
		}

		.has {
			&--devide {
				@include set-flex();
				gap: 24px;
				.devide {
					width: 1px;
					height: 16px;
					background-color: $C-TTL;
				}
			}
		}

		.filter {
			&--text {
				color: $C-FIS;
				font-size: 14px;
				line-height: 17px;
			}
			&--devide {
				@include set-flex($ALIGN: center);
				gap: 8px;
			}
			&--buttons {
				@include set-flex($ALIGN: center);
				gap: 8px;
				.btn {
					min-width: 90px;
				}
			}
		}
	}
}

// TOGGLE
.toggle {
	$EL: '.toggle';
	&--area {
		&.active {
			#{$EL}--btn {
				&::after {
					transform: rotate(0);
				}
			}
			#{$EL}--box {
				display: block;
			}
		}
	}
	&--btn {
		position: relative;
		padding: 12px;
		padding-right: 48px;
		background-color: #666666;
		border-radius: 6px;
		color: $C-W;
		font-size: 16px;
		font-weight: $F-EB;
		line-height: 24px;
		cursor: pointer;
		&::after {
			$S: 24px;
			@extend %resetIcon;
			position: absolute;
			display: block;
			width: $S;
			height: $S;
			top: 50%;
			right: 12px;
			margin-top: $S * -0.5;
			background-image: url(urlImg(ico, up, white));
			transform: rotate(180deg);
			content: '';
		}
	}
	&--box {
		display: none;
		padding-top: 10px;

		.table {
			&--area {
				padding: 0;
				margin-top: 14px;
			}
			&--top {
				margin-bottom: 10px;
			}
			&__title {
				font-size: 16px;
				font-weight: $F-SB;
				line-height: 28px;
			}
		}
		.page--area {
			margin-top: 10px;
		}
	}
}

// EDIT
.edit {
	$EL: '.edit';
	&--area {
		@include set-flex($DIRECTION: column);
		gap: 20px;
		padding-top: 10px;
		padding-bottom: 10px;
	}
	&--box {
		@include set-flex($ALIGN: flex-start);
		gap: 16px;
		&.is {
			&--double {
				@include set-grid($AUTO: 2);
				gap: 20px;
			}
		}
	}
	&--title {
		@include set-flex($FIXED: true);
		width: 120px;
		padding: 8.5px 12px;
		color: $C-FI;
		font-size: 14px;
		font-weight: $F-SB;
		line-height: 17px;
	}
	&--contents {
		@extend %gapDefault;
		@include set-flex($FIXED: false);
		padding: 8.5px 12px;
		color: $C-FIS;
		font-size: 14px;
		line-height: 17px;

		.imp {
			color: $C-SN;
		}

		&[class*='gap'] {
			display: flex;
			flex-direction: column;
		}
		&.pa-0 {
			padding: 0;
		}
	}
	&--gap-36 {
		@include set-flex($ALIGN: center);
		gap: 36px;
	}
}

// FILE
.filebox {
	@include set-flex($ALIGN: center);
	display: inline-flex;
	gap: 10px;
	.title {
		padding: 3px 8px;
		background-color: $C-BS;
		border-radius: 2px;
		color: $C-W;
		font-size: 12px;
		font-weight: $F-B;
		line-height: 14px;
	}
	.text {
		border-bottom: 1px solid $C-FIS;
		color: $C-FIS;
		font-size: 12px;
		line-height: 14px;
	}
}

// PAGE
.page {
	&--area {
		@include set-flex($JUSTIFY: space-between, $ALIGN: center);
		padding-bottom: 69px;

		> div {
			min-height: 34px;
		}

		.page {
			$S: 26px;
			@mixin pageBtn($IMG) {
				@extend %resetIcon;
				background-color: $C-W;
				border: 1px solid $C-BN;
				border-radius: 2px;
				background-size: auto 10px;
				background-image: url(urlImg(ico, #{$IMG}, black));
				&:disabled {
					background-image: url(urlImg(ico, #{$IMG}, gray));
				}

				&:hover:not(:disabled) {
					background-color: $C-TTH;
				}
			}

			width: $S;
			height: $S;

			&.is {
				&--first {
					@include pageBtn('page-first');
				}
				&--prev {
					@include pageBtn('page-prev');
				}
				&--next {
					@include pageBtn('page-next');
				}
				&--last {
					@include pageBtn('page-last');
				}
				&--num {
					color: #9b9fa8;
					font-size: 14px;
					font-weight: $F-SB;
					line-height: 20px;
					&.active {
						color: #222427;
					}
					&:disabled {
						background-color: transparent;
						color: $C-TLN;
					}
				}
			}
		}

		#{$DROP}--area {
			width: 103px;
			#{$DROP}--select {
				padding-right: 20px;
			}
		}
	}
	&--left {
	}
	&--center {
		@include set-flex($JUSTIFY: center, $ALIGN: center);
		gap: 4px;
	}
	&--numberbox {
		@include set-flex($JUSTIFY: center, $ALIGN: center);
		gap: 4px;
		min-width: 86px;
	}
	&--right {
	}
}

// LAYER
.layer {
	&--area {
		@include set-flex($JUSTIFY: center, $ALIGN: center);
		position: fixed;
		display: none;
		z-index: 999;

		&,
		&::after {
			position: fixed;
			width: 100%;
			height: 100%;
			top: 0;
			left: 0;
		}
		&::after {
			background-color: transparentize($color: $C-B, $amount: 0.5);
			z-index: 5;
			content: '';
		}
	}
	&--box {
		@include set-flex($DIRECTION: column, $ALIGN: stretch);
		position: relative;
		max-height: calc(100% - 30px);
		gap: 30px;
		padding: 30px 0;
		background-color: $C-W;
		z-index: 10;
	}
	&--header {
		$H: 33px;
		@include set-flex($JUSTIFY: space-between, $ALIGN: center);
		padding: 0 30px;
		min-height: $H;
		&__title {
			&,
			.title {
				color: $C-B;
				font-size: 22px;
				font-weight: $F-EB;
				line-height: $H;
			}
			.text {
				margin-top: 10px;
				color: $C-IN;
				font-size: 18px;
				font-weight: $F-N;
				line-height: 25px;
			}
		}
		&__close {
		}
	}
	&--contents {
		overflow-y: auto;
		padding: 0 30px;
	}
	&--buttons {
		@include set-flex($JUSTIFY: center);
		gap: 8px;
		padding: 20px 30px 10px;
		.btn {
			height: 44px;
		}
	}
}
